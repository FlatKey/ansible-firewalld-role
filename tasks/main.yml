---
- name: ensure firewalld is installed
  yum: name=firewalld state=present

- name: ensure firewalld is enabled and started
  service: name=firewalld enabled=yes state=started

- name: set firewalld default zone
  command: /bin/firewall-cmd --set-default-zone={{default_zone|default('public')}}
  register: result
  changed_when: result.stdout == "success"

- name: set firewalld zone interface
  command: /bin/firewall-cmd --zone={{item.key}} --change-interface={{item.value}} --permanent
  with_dict: "{{firewalld_zone_interface|default({})}}"
  notify: restart firewalld

- name: set firewalld zone source
  firewalld: zone={{item.key}} permanent={{item.value.permanent|default('true')}} immediate={{item.value.immediate|default('true')}} state={{item.value.state|default('enabled')}} source={{item.value.source}}
  with_dict: "{{firewalld_zone_source|default({})}}"

- name: set firewalld service rules
  firewalld: service={{item.key}} permanent={{item.value.permanent|default('true')}} immediate={{item.value.immediate|default('true')}} state={{item.value.state|default('enabled')}} zone={{item.value.zone|default('public')}}
  with_dict: "{{firewalld_service_rules|default({})}}"

- name: set firewalld port rules
  firewalld: port={{item.value.port}}/{{item.value.protocol|default('tcp')}} permanent={{item.value.permanent|default('true')}} immediate={{item.value.immediate|default('true')}} state={{item.value.state|default('enabled')}} zone={{item.value.zone|default('public')}}
  with_dict: "{{firewalld_port_rules|default({})}}"

- name: set firewalld rich rules
  firewalld: rich_rule={{item.value.rule}} permanent={{item.value.permanent|default('true')}} immediate={{item.value.immediate|default('true')}} state={{item.value.state|default('enabled')}} zone={{item.value.zone|default('public')}}
  with_dict: "{{firewalld_rich_rules|default({})}}"
